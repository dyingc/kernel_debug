What's in an event?
-------------------------

id
------
id is a unique identifier that can be used to attach to a specific tracepoint

format
--------
Each trace event has a ‘format’ file associated with it that contains a description of each field in a logged event

This file 
	displays the format string that will be used to print the event in text mode
	event name and 
	ID

Every event has a set of common fields associated with it; these are the fields prefixed with common_

The other fields vary between events and correspond to the fields defined in the TRACE_EVENT definition for that event.

Each field in the format has the form:

field:field-type field-name; offset:N; size:N;

	offset is the offset of the field in the trace record
	size is the size of the data item, in bytes.

# cat events/sched/sched_switch/format 
name: sched_switch
ID: 323
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:char prev_comm[16];	offset:8;	size:16;	signed:1;
	field:pid_t prev_pid;	offset:24;	size:4;	signed:1;
	field:int prev_prio;	offset:28;	size:4;	signed:1;
	field:long prev_state;	offset:32;	size:8;	signed:1;
	field:char next_comm[16];	offset:40;	size:16;	signed:1;
	field:pid_t next_pid;	offset:56;	size:4;	signed:1;
	field:int next_prio;	offset:60;	size:4;	signed:1;

print fmt: "prev_comm=%s prev_pid=%d prev_prio=%d prev_state=%s%s ==> next_comm=%s next_pid=%d next_prio=%d", REC->prev_comm, REC->prev_pid, REC->prev_prio, (REC->prev_state & ((((0x0000 | 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040) + 1) << 1) - 1)) ? __print_flags(REC->prev_state & ((((0x0000 | 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040) + 1) << 1) - 1), "|", { 0x0001, "S" }, { 0x0002, "D" }, { 0x0004, "T" }, { 0x0008, "t" }, { 0x0010, "X" }, { 0x0020, "Z" }, { 0x0040, "P" }, { 0x0080, "I" }) : "R", REC->prev_state & (((0x0000 | 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040) + 1) << 1) ? "+" : "", REC->next_comm, REC->next_pid, REC->next_prio

ID:	Used in the ring buffer
format:	first part before the space. All trace events have the exact  common event
	common_type : What type of event am i. It will be ID. Here it will be 323
	common_flags: Whether interrupts are enabled or disabled
	common_preempt_count: Preemption will tell whether preemption was enabled or disabled. Also other information like whether we are in interrupt context or process context or NMI Context
	common_pid : Process ID

Next are details specific to each event

