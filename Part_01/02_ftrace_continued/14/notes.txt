Find deepest kernel stack
---------------------------

Kernel has a fixed stack size.

The default stack size for process running in kernel is 8K.

Call a function in recursion without any break, you will observe system will freeze within seconds

A kernel developer should be careful with what they are allocating on the stack

If he adds a lot to the kernel stack, stack overflow can happen and finally system panic.

Ftrace helps you to find the routine with the deepest kernel stack.

Turning it on: 
----------------
You can turn it on at boot time or at runtime.

Boot time:
-----------
use the following on the kernel command line:
stacktrace

Run Time:
----------
echo 1 >/proc/sys/kernel/stack_tracer_enabled

Wait for few minutes to get a better information.

the stack tracer will continue operating until you turn it off, which can be done with:
echo 0 >/proc/sys/kernel/stack_tracer_enabled

Files to look to get stack information:
---------------------------------------

stack_max_size: Displays the maximum size it has encountered
stack_trace: Displays the backtrace of the largest stack trace encountered after activating stack tracer, it also shows the breakdown of the stack sizes used by each function
stack_trace_filter: Limits what functions stack tracer will check, it is similar to "set_ftrace_filter"

To reset the maximum, echo “0” into the stack_max_size file.
# echo 0 > stack_max_size


