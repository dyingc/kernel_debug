Setting a tracer
----------------

trace-cmd start is used to set a particular tracer

# trace-cmd start -p <tracer>

-p stands for tracers (historically they were once called "plugins")

#trace-cmd start -p function
#trace-cmd stat

#trace-cmd start -p function_graph
#trace-cmd stat

#trace-cmd start -p nop
#trace-cmd stat

-e is for events

The event is of the format "subsystem:event-name".
You can also just specify the subsystem without the :event-name or the event-name without the "subsystem:"

# trace-cmd start -e syscalls
# trace-cmd stat

# trace-cmd start -e sched
# trace-cmd stat

# trace-cmd start -e sched_switch
# trace-cmd stat

# strace -e open,openat,write -o strace_output.txt trace-cmd start -e sched_switch -e sched_wakeup
# trace-cmd stat

The keyword 'all' can be used to enable all events.
# trace-cmd start -e all
# trace-cmd start

Stopping tracing
----------------

trace-cmd stop
------------------

trace-cmd stop is a complement to trace-cmd-start

This will disable Ftrace from writing to the ring buffer

This does not stop the overhead that the tracing may incur

Only the updating of the ring buffer is disabled, the Ftrace tracing may still be inducing overhead

# trace-cmd start -p function_graph
# trace-cmd stat
# trace-cmd stop
# trace-cmd stat



